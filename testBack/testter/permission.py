from rest_framework.permissions import BasePermission, SAFE_METHODS
from rest_framework import permissions
class IsOwnerOrAdmin(BasePermission):
    def has_object_permission(self, request, view, obj):
        #return request.user and (request.user.is_staff or obj.owner == request.user)
        user = request.user
        print("üîç –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:", user)
        print("üîê is_authenticated:", user.is_authenticated)
        print("üîê is_staff:", user.is_staff)
        print("üì¶ –û–±'—î–∫—Ç:", obj)
        print("üë§ –í–ª–∞—Å–Ω–∏–∫ –æ–±'—î–∫—Ç–∞:", getattr(obj, 'owner', None))

        result = user.is_staff or (hasattr(obj, 'owner') and obj.owner == user)
        print("‚úÖ –î–æ—Å—Ç—É–ø –¥–æ–∑–≤–æ–ª–µ–Ω–æ?" , result)

        return result

class IsOwner(permissions.BasePermission):
    def has_object_permission(self, request, view, obj):
        return obj.owner == request.user

import logging
from rest_framework.permissions import SAFE_METHODS, BasePermission

logger = logging.getLogger(__name__)

class VerboseAdminOrReadOnly(BasePermission):
    """
    –î–æ–∑–≤–æ–ª—è—î —Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –¥–∞–Ω—ñ.
    –í—Å—ñ–º —ñ–Ω—à–∏–º –¥–æ–∑–≤–æ–ª–µ–Ω–æ —Ç—ñ–ª—å–∫–∏ —á–∏—Ç–∞–Ω–Ω—è.
    """

    def has_permission(self, request, view):
        if request.method in SAFE_METHODS:
            return True

        user = request.user

        if not user or not user.is_authenticated:
            logger.warning(f"‚ùå Access denied: –Ω–µ–∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–∏ {request.method} –Ω–∞ {request.path}")
            return False

        if not user.is_staff:
            logger.warning(f"‚ùå Access denied: –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.username} –Ω–µ —î –∞–¥–º—ñ–Ω–æ–º")
            return False

        return True


